
El siguiente documento tiene como objetivo que los equipos apliquen los 5 eventos principales de Scrum (sprint, Planning, Daily, Review, Retrospective, y Refinement) de forma adaptada a su contexto: desarrollo de flujos AI en n8n, trabajo en parejas (developer‚Äìtester), y evidencias verificables.
Integra gu√≠as y formatos para estudiantes de Pr√°ctica I UNAB; que trabajan con flujos de AI en n8n. Este documento provee plantillas listas para usar en Taiga: Retrospectiva, Refinamiento, Pruebas Unitarias e Integraci√≥n, y recomendaciones de evidencia.
Recordar que los sprint duran 3 semanas y que es el equipo el que organiza qu√© hacer semanalmente. Inicio del sprint 1: 13 de octubre al 02 de noviembre, entrega de video el 22 de noviembre. Revisi√≥n de incremento 29 de noviembre
Sprint 2 Inicio: 03 de noviembre al 23 de noviembre. Revisiones por definir Sprint 3 Inicio: 24 de noviembre al 13 de diciembre. Revisiones por definir
Uso de Taiga: recomendaciones
-	Crear una Wiki del Sprint (Sprint 1) y subir all√≠ los documentos PDF finalizados.
-	En cada HU, adjuntar evidencia: capturas de n8n, JSON exportado del flujo, registros de pruebas.
-	Vincular la HU con la Tarea correspondiente y marcar estados con claridad (Nueva, En curso, En revisi√≥n, Hecha).
-	Subir los informes solicitados. Recuerde que el compromiso es trabajar 10 horas semanales. Que muchos grupos no han cumplido. Debe cumplir el total de horas de la pr√°ctica.
1.	Evento Sprint Planning
Objetivos del evento:
Definir el objetivo del Sprint 1. Entregar un flujo funcional integrado de todas las historias que ingresar√°n a este sprint por tener la mayor priorizaci√≥n. Debe ingresar al menos 3 HU.
‚Ä¢	Asignar a menos una HU por developer y vincular un tester (PO o SM).
‚Ä¢	Elaborar el Sprint Backlog con tareas concretas por HU y responsables. Debe usar Taiga para representar el sprint backlog
‚Ä¢	Aplicar Planning Poker para estimar el esfuerzo de la HU. Estudiar e concepto de HU Pivote para mejorar la estimaci√≥n del equipo
‚Ä¢	Definir el documento Do, que incluya al menos lo siguiente:
 

1.	Objetivo del sprint
2.	Integraci√≥n de los criterios de aceptaci√≥n de todas las historias
3.	Casos de prueba de los criterios de aceptaci√≥n
4.	Calidad t√©cnica m√≠nima del fujo: errores controlados, logs, seguridad de credenciales, rendimiento, datos anonimizados, nomenclatura de nodos (AUTH_, API_, MAP_, CTRL_, OUT_).
5.	Video de aceptaci√≥n al PO externo
6.	Integraci√≥n del flujo del incremento en JSON y git
Recomendaciones:
‚Ä¢	Cada HU debe estar completa y ejecutable, aunque repita parte del flujo de otro integrante.
‚Ä¢	Documentar las tareas derivadas en formato tabla:
o	ID HU, descripci√≥n, tareas, responsable, estimaci√≥n, estado inicial, todo esto en taiga
‚Ä¢	Utilizar una herramienta de estimaci√≥n:
üîó Planning Poker Online ‚Äì Scrumpoker-online.org
(recomienda usar valores Fibonacci 1‚Äì2‚Äì3‚Äì5‚Äì8‚Äì13 y explicar por qu√© eligieron la estimaci√≥n final).
‚Ä¢	Cada HU debe crear, ejecutar y documentar al menos 3 casos de prueba por cada criterio de aceptaci√≥n (CA)
‚Ä¢	Al terminar de desarrollar y probar las HU, es esperable que tengan c√≥digo o funcionalidades repetidas, por lo tanto en la fase de integraci√≥n de las HU al flujo final del sprint o incremento, debe quedar definido en el entorno de trabajo del developer l√≠der. Este flujo debe subirse a git y probarse con casos de pruebas de integraci√≥n.
‚Ä¢	Antes del evento de cierre del sprint o retrospectiva, debe hacerse el refinamiento, despu√©s de ello debe subirse el flujo integrado o incremento al git del equipo y importarse el flujo integrado y probado en todos los entornos de programaci√≥n de los developers y tester
Informe post-Planning (entregable):
1.	Nombre del equipo, roles y HU asignadas. Definici√≥n del Lider de developer
2.	Objetivo del sprint.
3.	Sprint Backlog con tareas por HU.
4.	Captura o registro del Planning Poker.
5.	Supuestos o dudas no resueltas para el PO.
6.	Documentaci√≥n de cada flujo n8n por HU asignada
 

7.	Registros de pruebas unitarias por cada CA de cada HU
8.	Criterios de integraci√≥n del flujo o incremento
9.	Pruebas de integraci√≥n del flujo


2.	Evento Daily Scrum
Objetivos del evento:
El equipo de desarrollo inspeccione el progreso hacia el objetivo del Sprint y adapte el plan (Sprint Backlog) para las pr√≥ximas 24‚Äì48 horas, identificando y gestionando impedimentos. No es un reporte al SM/PO; es principalmente para gestionar el proyecto y ayudar al control de los Developers.
En concreto, la Daily sirve para:
1.	Inspeccionar: ¬øC√≥mo vamos respecto al Objetivo del Sprint?
2.	Adaptar: ¬øQu√© cambiaremos hoy/ma√±ana en el plan de trabajo (tareas, prioridades, pares)?
3.	Desbloquear: ¬øQu√© impedimentos existen y qui√©n los tomar√°?
4.	Actualizar: tablero/taiga, tiempos, estado de HU, y compromisos inmediatos.
Se solicita:
Se realizar√° cada dos d√≠as (no diario). Deben ser por el mismo medio (presencial, online.. etc) y en la misma hora Debe durar m√°ximo 15 minutos y registrar/hablar brevemente:
o	Qu√© hice desde el √∫ltimo Daily.
o	Qu√© har√© hasta el pr√≥ximo.
o	Qu√© impedimentos encontr√©.
El Scrum Master registra y sube capturas o minutas breves.
Cada Developer actualizan taiga y planificaci√≥n de tareas del sprint backlog Al final del Sprint se entregar√° un resumen de Daily
 
3.	Evento Sprint Review
Objetivos del evento:
Inspeccionar el incremento entregado (HU integradas) funcionando y recoger feedback del PO y adaptar el Product Backlog (qu√© sigue / qu√© cambiar)
1.	Video de 10 minutos: con diapositiva inicial. Propuesta de contenidos
o	0:00 Presentaci√≥n del equipo
o	0:40 Objetivo del sprint
o	1:10 Demo Criterios de Aceptaci√≥n (CA)‚ÜíPrueba (mapa CA‚Üîdemo) para todas las HU
o	6:00 Muestra el flujo integrado del sprint: Incremento
o	7:30 Supuestos y preguntas para el PO
o	9:00 Lecciones y pr√≥ximos pasos
2.	Informe de a Review

Matriz Casos de prueba. Mostrar al menos un caso negativo (No Pass)

HU HU-01
HU-01	CA (Given/When/Then)	D√≥nde se ve en el video	Resultado
	AC1: Explicaci√≥n	01:35‚Äì02:10	Pass
	AC2: explicaci√≥n	02:11‚Äì02:40	Pass

1.	Necesidades para el pr√≥ximo sprint, o para continuar con este sprint, para antes de entregar
o	Dato/Regla a confirmar
o	Alternativa A/B propuesta por el equipo.
o	Plazo deseado de respuesta e impacto si no se decide.
2.	Supuestos del sprint actual
o	Supuesto ‚Üí Impacto ‚Üí Evidencia de por qu√© se asumi√≥.
 

A.	Clarificando los requisitos. Para cada HU debe agregar y/o revisar los siguientes anexos

1)	Backlog de Preguntas al PO que explican el supuesto (lea el anexo E)

ID Prior.  HU	Pregunta	Contexto (qu√© probamos) Propuesta del equipo	Impacto	Estado

Q-03	Alta	HU-02	¬øFormato definitivo de fecha?	API X devuelve YYYY-MM-DD	Usar ISO 8601	Bloquea validaci√≥n	Pendiente

Regla: cada pregunta debe traer una propuesta; si no, no se publica.

2)	‚ÄúFicha de HU‚Äù (1 p√°gina por HU, est√°ndar)

‚Ä¢	Objetivo de la HU (1 frase).
‚Ä¢	CA (‚â•2) en Given/When/Then.
‚Ä¢	Entradas/Salidas esperadas (JSON breve).
‚Ä¢	Errores esperados & manejo.
‚Ä¢	Datos de prueba (v√°lido/inv√°lido/borde).
o	Evidencia (captura/log/etc).

3)	Mocks / Colecci√≥n de pruebas

‚Ä¢	Link a Postman/Insomnia o a mocks usados; dataset sint√©tico.

B.	Gu√≠a r√°pida para escribir CA (pegar en Taiga en Wiki): 5 reglas simples

1.	Un comportamiento por CA.
2.	Medible y observable (qu√© devuelve/qu√© cambia).
3.	Incluye un CA negativo (error o dato inv√°lido).
4.	Datos concretos (valores reales, no ‚ÄúX/Y‚Äù).
5.	Tiempo/umbral cuando aplique (p. ej., ‚â§ 15 s).
 

Plantilla ejemplo de plantilla

‚Ä¢	Given un payload con {email: v√°lido}
‚Ä¢	When se ejecuta el nodo API_EnviarCorreo
‚Ä¢	Then el servicio responde 200 y se registra log ‚Äúcorreo_enviado:true‚Äù
‚Ä¢	And ante email inv√°lido devuelve 400 y log de validaci√≥n.

C.	Definition of Ready (DoR) ligero para el refinamiento. Esto desbe hacerlo el tester por HU asignada Antes de entrar una HU al sprint:
‚Ä¢	  Objetivo claro en 1 frase.
‚Ä¢	  ‚â•2 AC en Given/When/Then.
‚Ä¢	  Entradas/Salidas definidas (campo, tipo, ejemplo).
‚Ä¢	  Manejo de errores m√≠nimo descrito.
‚Ä¢	  Datos de prueba listos.
‚Ä¢	  Dependencias/impacto en flujo integrado identificadas.
‚Ä¢	  Estimada (Planning Poker)

D.	Rutina de comunicaci√≥n (ense√±ar a ‚Äúpreguntar bien‚Äù. Pegar en Taiga). Anexo para explicar como desarrollar 1), buenas preguntas de los requisitoa Formato de comentario en Taiga (obligatorio):
‚Ä¢	Contexto: qu√© HU/tarea, qu√© intent√©, qu√© ocurri√≥.
‚Ä¢	Evidencia: captura/log/caso.
‚Ä¢	Hip√≥tesis: qu√© creo que pasa.
‚Ä¢	Propuesta: A) 	B) 	.
‚Ä¢	Etiqueta: #blocking / #data / #ux / #api.
 
4.	Evento Retrospectiva (Sprint Retrospective)
Objetivos del evento:
Inspeccionar c√≥mo trabaj√≥ el equipo (personas, procesos, herramientas, comunicaci√≥n),
Definir mejoras concretas (experimentos/acciones) para el siguiente sprint.
Responsable: Scrum Master. Duraci√≥n sugerida de la reuni√≥n: 30‚Äì40 minutos. Subir el acta a la Wiki del Sprint.

Secci√≥n	Contenido esperado	Ejemplo / Nota
Datos generales	Equipo, Sprint, Fecha, Asistentes.	Equipo A, Sprint 1, 10/10/2025, 5 asistentes.
Lo que sali√≥ bien	3‚Äì5 fortalezas del Sprint.	Comunicaci√≥n por Discord, HU entregadas a tiempo.
Lo que podemos mejorar	3‚Äì5 puntos de mejora priorizados.	Estimaci√≥n conservadora; falta de preguntas al PO.
Acciones de mejora	Acciones SMART con responsable y fecha.	Estandarizar nombres de nodos n8n (Resp: Ana, 14/10).
Riesgos y bloqueos	Riesgos detectados y mitigaciones.	Dependencia de API externa; crear mock local.
Compromisos para Sprint 2	2‚Äì3 compromisos concretos.	Hacer Daily cada 2 d√≠as con minuta breve.
 

5.	Evento Refinamiento (Backlog Refinement / Grooming)
Objetivos del evento:
Elevar la calidad de los √≠tems del backlog para que est√©n READY al entrar al pr√≥ximo sprint Estos objetivos est√°n definidos en el DoD, y deben ser caros, estimados y medibles (Casos de prueba)
Responsable: Product Owner (coordina), SM facilita. Objetivo: preparar HU candidatas para el pr√≥ximo sprint.

HU	Checklist de preparaci√≥n	Estimaci√≥n / Dependencias	Notas / Supuestos para PO
HU-05 Notificar al usuario por correo	-	T√≠tulo claro y objetivo de negocio definido.
-	Criterios de aceptaci√≥n (Given/When/Then) espec√≠ficos.
-	Datos de entrada y salida esperados del flujo n8n.
-	Reglas de negocio y manejo de errores.
-	Definici√≥n de done (DoD) y evidencia requerida.
-	Riesgos identificados (API externa, credenciales, tiempos de ejecuci√≥n).
-	Mock/ambiente de prueba disponible para recursos externos.
-	Impacto en el flujo integrado (puntos de integraci√≥n).	5 puntos (Fibonacci). Depende de HU-03 (generar token).	¬øQu√© plantilla de correo usar√° el PO? ¬øIdiomas requeridos?
Recomendaciones para el Refinamiento:
-	Mantener HU peque√±as y con un √∫nico objetivo pr√°ctico (evitar mega-flujos).
-	Unificar nomenclatura de nodos en n8n (prefijos por funcionalidad: AUTH_, API_, MAP_...).
-	Documentar errores esperados y tiempo m√°ximo de ejecuci√≥n por HU.
-	Si una HU reutiliza pasos de otra, indicar expl√≠citamente qu√© parte se replica y por qu√©.
-	Preparar datos de prueba representativos, incluyendo casos l√≠mite.
 

6.	Anexos del informe
3)	Plantilla de Pruebas Unitarias por HU
Responsable: Tester asignado (PO o SM). Adjuntar resultados como comentario en la HU de Taiga.

HU	Caso de prueba	Entrada	Resultado esperado	Resultado obtenido	Estado (Pass/Fail)	Evidencia (link/captura)
HU-01	Entrada v√°lida	payload JSON con campos X,Y	Respuesta 200 con campo Z	200 con Z correcto	Pass	Captura_01.png
HU-01	Campo ausente	payload sin X	Error manejado y log	Error 400 y log en n8n	Pass	Captura_02.png
HU-01	Timeout externo	simular API lenta	Reintento y alerta	Reintento x3, alerta Slack	Fail	Captura_03.png
Notas de pruebas unitarias:
-	Definir al menos 3 casos por HU (v√°lido, inv√°lido, borde/timeout).
-	Registrar versi√≥n del flujo n8n probada y las credenciales/entorno empleados.
-	Guardar export del flujo (.json) con nombre est√°ndar: HU-XX_v1.json.
 

4)	Plan de Pruebas de Integraci√≥n (Flujo Integrado)
Responsable: Developer L√≠der + Tester (PO/SM). Subir a la Wiki del Sprint y vincular a cada HU.

ID	Escenario	Precondiciones	Pasos	Resultado esperado	Evidencia
INT-01	Flujo
HU1‚ÜíHU2‚ÜíHU3
con datos v√°lidos	n8n listo, credenciales configuradas	Disparar HU1 con payload est√°ndar	Ejecuci√≥n completa sin errores	Video o capturas
INT-02	Falla en HU2 (API externa)	Mock activo para API	Simular error 500 en HU2	HU3 no dispara; registro de error y alerta	Logs + captura
INT-03	Datos l√≠mite	Dataset con campos extremos	Ejecutar con valores m√°ximos/m√≠nimos	Validaciones correctas; tiempos en rango	Reporte tiempos
Evidencia m√≠nima del flujo integrado:
-	Capturas del flujo final en n8n (diagrama y nodos clave).
-	Export del flujo integrado (.json) y hash o fecha de versi√≥n.
-	Logs de ejecuci√≥n (OK y con fallos simulados).
-	Video corto de la ejecuci√≥n end-to-end (puede reutilizarse para la Review).
 

5)	Nomenclatura y consistencia de artefactos
-	HU y tareas: HU-XX, T-XX_HU-XX.
-	Evidencia: HU-XX_TestCase-YY.png, INT-XX_Log.txt, FlujoIntegrado_v1.json.
-	Video: Review_Sprint1_EquipoX.mp4.
-	Ubicaci√≥n en Taiga: HU ‚Üí Adjuntos; Wiki Sprint ‚Üí Actas e informes; Tareas ‚Üí progreso.
