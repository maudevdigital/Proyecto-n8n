{
    "name": "HU-01: Recepción de Solicitud - Convalidaciones Académicas",
    "nodes": [
        {
            "parameters": {
                "httpMethod": "POST",
                "path": "solicitud-convalidacion",
                "responseMode": "onReceived",
                "options": {
                    "responseHeaders": {
                        "entries": [
                            {
                                "name": "Content-Type",
                                "value": "application/json"
                            }
                        ]
                    }
                }
            },
            "name": "Webhook - Recepción",
            "type": "n8n-nodes-base.webhook",
            "typeVersion": 1,
            "position": [300, 300],
            "id": "webhook-recepcion"
        },
        {
            "parameters": {
                "functionCode": "// HU-01: Validación de campos requeridos según especificaciones TXT\nconst requiredFields = ['nombre', 'rut', 'carrera', 'asignatura', 'institucionOrigen', 'documentos'];\nconst errors = [];\n\n// Validar campos obligatorios\nfor (const field of requiredFields) {\n  if (!$input.item.json[field] || $input.item.json[field].toString().trim() === '') {\n    errors.push(`Campo requerido: ${field}`);\n  }\n}\n\n// Si hay errores, retornar respuesta de error\nif (errors.length > 0) {\n  return {\n    json: {\n      success: false,\n      errors: errors,\n      message: 'Faltan campos obligatorios',\n      code: 400\n    }\n  };\n}\n\n// Si todo está bien, procesar y agregar metadatos\nreturn {\n  json: {\n    ....$input.item.json,\n    success: true,\n    documentosCompletos: true,\n    fechaSolicitud: new Date().toISOString(),\n    id: `SOL-${$input.item.json.rut}-${Date.now()}`,\n    estado: 'Recibida'\n  }\n};"
            },
            "name": "Function - Validar Campos",
            "type": "n8n-nodes-base.function",
            "typeVersion": 1,
            "position": [500, 300],
            "id": "function-validar"
        },
        {
            "parameters": {
                "conditions": {
                    "boolean": [
                        {
                            "value1": "={{$json.success}}",
                            "value2": true
                        }
                    ]
                }
            },
            "name": "IF - Validación OK",
            "type": "n8n-nodes-base.if",
            "typeVersion": 1,
            "position": [700, 300],
            "id": "if-validacion"
        },
        {
            "parameters": {
                "functionCode": "// HU-01: Validar formato de documentos PDF\nconst docs = $input.item.json.documentos;\nlet pdfsOk = true;\nlet badFiles = [];\n\n// Si documentos es string, asumir que es nombre de archivo\nif (typeof docs === 'string') {\n  if (!docs.toLowerCase().endsWith('.pdf')) {\n    pdfsOk = false;\n    badFiles.push(docs);\n  }\n} else if (Array.isArray(docs)) {\n  // Si es array, validar cada archivo\n  for (const doc of docs) {\n    const fileName = doc.fileName || doc.name || doc;\n    if (typeof fileName === 'string' && !fileName.toLowerCase().endsWith('.pdf')) {\n      pdfsOk = false;\n      badFiles.push(fileName);\n    }\n  }\n}\n\nreturn {\n  json: {\n    ...$input.item.json,\n    pdfsOk,\n    badFiles,\n    validacionPDF: pdfsOk ? 'Documentos válidos' : 'Documentos inválidos'\n  }\n};"
            },
            "name": "Function - Validar PDF",
            "type": "n8n-nodes-base.function",
            "typeVersion": 1,
            "position": [500, 200],
            "id": "function-pdf"
        },
        {
            "parameters": {
                "conditions": {
                    "boolean": [
                        {
                            "value1": "={{$json.pdfsOk}}",
                            "value2": true
                        }
                    ]
                }
            },
            "name": "IF - PDF Válido",
            "type": "n8n-nodes-base.if",
            "typeVersion": 1,
            "position": [700, 200],
            "id": "if-pdf"
        },
        {
            "parameters": {
                "operation": "append",
                "sheetName": "Solicitudes",
                "columns": [
                    {
                        "column": "ID",
                        "value": "={{$json.id}}"
                    },
                    {
                        "column": "Fecha",
                        "value": "={{$json.fechaSolicitud}}"
                    },
                    {
                        "column": "Estudiante",
                        "value": "={{$json.nombre}}"
                    },
                    {
                        "column": "RUT",
                        "value": "={{$json.rut}}"
                    },
                    {
                        "column": "Carrera",
                        "value": "={{$json.carrera}}"
                    },
                    {
                        "column": "Asignatura",
                        "value": "={{$json.asignatura}}"
                    },
                    {
                        "column": "InstitucionOrigen",
                        "value": "={{$json.institucionOrigen}}"
                    },
                    {
                        "column": "Estado",
                        "value": "={{$json.estado}}"
                    }
                ]
            },
            "name": "DB-Registro",
            "type": "n8n-nodes-base.googleSheets",
            "typeVersion": 4,
            "position": [900, 200],
            "id": "db-registro"
        },
        {
            "parameters": {
                "operation": "append",
                "sheetName": "Logs",
                "columns": [
                    {
                        "column": "Timestamp",
                        "value": "={{$json.fechaSolicitud}}"
                    },
                    {
                        "column": "ID",
                        "value": "={{$json.id}}"
                    },
                    {
                        "column": "Status",
                        "value": "Solicitud recibida y registrada"
                    },
                    {
                        "column": "Details",
                        "value": "HU-01: Recepción exitosa - Estudiante: {{$json.nombre}}"
                    }
                ]
            },
            "name": "DB-Log",
            "type": "n8n-nodes-base.googleSheets",
            "typeVersion": 4,
            "position": [900, 300],
            "id": "db-log"
        },
        {
            "parameters": {
                "fromEmail": "sistema@universidad.edu",
                "toEmail": "={{$json.email || 'estudiante@ejemplo.com'}}",
                "subject": "Confirmación de Recepción - Solicitud {{$json.id}}",
                "text": "Estimado/a {{$json.nombre}},\n\nHemos recibido correctamente su solicitud de convalidación con los siguientes datos:\n\n• ID de Solicitud: {{$json.id}}\n• Fecha de Recepción: {{$json.fechaSolicitud}}\n• Asignatura: {{$json.asignatura}}\n• Institución de Origen: {{$json.institucionOrigen}}\n• Estado: {{$json.estado}}\n\nPróximos pasos:\n1. Su solicitud será revisada por la Dirección Académica\n2. Recibirá una notificación cuando haya una decisión\n3. El proceso puede tomar entre 5-10 días hábiles\n\nPara consultas, puede contactarnos indicando su ID de solicitud.\n\nSaludos cordiales,\nSistema Automatizado de Convalidaciones\nUniversidad"
            },
            "name": "Email-Confirmación",
            "type": "n8n-nodes-base.emailSend",
            "typeVersion": 2,
            "position": [1100, 250],
            "id": "email-confirmacion"
        },
        {
            "parameters": {
                "fromEmail": "sistema@universidad.edu",
                "toEmail": "={{$json.email || 'estudiante@ejemplo.com'}}",
                "subject": "Error en Documentos - Solicitud de Convalidación",
                "text": "Estimado/a {{$json.nombre}},\n\nHemos detectado un problema con los documentos adjuntos en su solicitud:\n\n• Archivos con formato incorrecto: {{$json.badFiles.join(', ')}}\n\nRequisitos de documentos:\n- Solo se aceptan archivos en formato PDF\n- Asegúrese de que todos los documentos tengan extensión .pdf\n\nPor favor, reenvíe su solicitud con los documentos en formato correcto.\n\nSaludos cordiales,\nSistema Automatizado de Convalidaciones"
            },
            "name": "Email-Error PDF",
            "type": "n8n-nodes-base.emailSend",
            "typeVersion": 2,
            "position": [900, 400],
            "id": "email-error-pdf"
        },
        {
            "parameters": {
                "functionCode": "// HU-01: Generar respuesta final de error de validación\nreturn {\n  json: {\n    success: false,\n    message: 'Error en validación de campos',\n    errors: $input.item.json.errors,\n    code: 400,\n    timestamp: new Date().toISOString()\n  }\n};"
            },
            "name": "Function-Error Response",
            "type": "n8n-nodes-base.function",
            "typeVersion": 1,
            "position": [900, 500],
            "id": "function-error"
        },
        {
            "parameters": {
                "functionCode": "// HU-01: Generar respuesta final exitosa\nreturn {\n  json: {\n    success: true,\n    message: 'Solicitud recibida y procesada correctamente',\n    id: $input.item.json.id,\n    fechaSolicitud: $input.item.json.fechaSolicitud,\n    estado: $input.item.json.estado,\n    proximosPasos: 'Recibirá notificación por email una vez revisada la solicitud',\n    tiempoEstimado: '5-10 días hábiles',\n    code: 200\n  }\n};"
            },
            "name": "Function-Success Response",
            "type": "n8n-nodes-base.function",
            "typeVersion": 1,
            "position": [1300, 250],
            "id": "function-success"
        },
        {
            "parameters": {
                "notes": "HU-01: Punto de entrada\n\nRecibe solicitudes POST con:\n- nombre, rut, carrera\n- asignatura, institucionOrigen  \n- documentos (PDF)\n- email (opcional)"
            },
            "name": "Note-Webhook",
            "type": "n8n-nodes-base.comment",
            "typeVersion": 1,
            "position": [300, 180],
            "id": "note-webhook"
        },
        {
            "parameters": {
                "notes": "HU-01: Validación de campos\n\nVerifica que todos los campos\nobligatorios estén presentes:\n- nombre, rut, carrera\n- asignatura, institucionOrigen\n- documentos"
            },
            "name": "Note-Validación",
            "type": "n8n-nodes-base.comment",
            "typeVersion": 1,
            "position": [500, 180],
            "id": "note-validacion"
        },
        {
            "parameters": {
                "notes": "HU-01: Almacenamiento\n\nGuarda la solicitud en:\n- Google Sheets (Solicitudes)\n- Google Sheets (Logs)\n- Envía confirmación por email"
            },
            "name": "Note-Almacenamiento",
            "type": "n8n-nodes-base.comment",
            "typeVersion": 1,
            "position": [1000, 180],
            "id": "note-almacenamiento"
        }
    ],
    "connections": {
        "Webhook - Recepción": {
            "main": [
                [
                    {
                        "node": "Function - Validar Campos",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Function - Validar Campos": {
            "main": [
                [
                    {
                        "node": "IF - Validación OK",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "IF - Validación OK": {
            "main": [
                [
                    {
                        "node": "Function - Validar PDF",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "Function-Error Response",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Function - Validar PDF": {
            "main": [
                [
                    {
                        "node": "IF - PDF Válido",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "IF - PDF Válido": {
            "main": [
                [
                    {
                        "node": "DB-Registro",
                        "type": "main",
                        "index": 0
                    },
                    {
                        "node": "DB-Log",
                        "type": "main",
                        "index": 0
                    }
                ],
                [
                    {
                        "node": "Email-Error PDF",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "DB-Registro": {
            "main": [
                [
                    {
                        "node": "Email-Confirmación",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "DB-Log": {
            "main": [
                [
                    {
                        "node": "Email-Confirmación",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        },
        "Email-Confirmación": {
            "main": [
                [
                    {
                        "node": "Function-Success Response",
                        "type": "main",
                        "index": 0
                    }
                ]
            ]
        }
    },
    "settings": {},
    "staticData": null,
    "pinData": {},
    "tags": ["hu-01", "convalidaciones", "recepcion"],
    "triggerCount": 0,
    "versionId": "hu01-v1.0"
}